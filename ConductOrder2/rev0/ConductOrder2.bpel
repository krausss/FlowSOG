<!-- ConductOrder2 BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Mon Nov 14 14:09:43 CET 2016 -->
<bpel:process name="ConductOrder2" targetNamespace="sog"
	suppressJoinFailure="yes" xmlns:tns="sog"
	xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
	xmlns:ns="http://iaas.uni-stuttgart.de/labs/FlowSOG">

	<!-- Import the client WSDL -->
	<bpel:import namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"
		location="ShopServices.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
	<bpel:import location="ConductOrder2Artifacts.wsdl"
		namespace="sog" importType="http://schemas.xmlsoap.org/wsdl/" />

	<!-- ================================================================= -->
	<!-- PARTNERLINKS -->
	<!-- List of services participating in this BPEL process -->
	<!-- ================================================================= -->
	<bpel:partnerLinks>
		<!-- The 'client' role represents the requester of this service. -->
		<bpel:partnerLink name="client" partnerLinkType="tns:ConductOrder2"
			myRole="ConductOrder2Provider" />
		<bpel:partnerLink name="InventoryPL" partnerLinkType="tns:InventoryPLT"
			partnerRole="InventoryRole"></bpel:partnerLink>
		<bpel:partnerLink name="OrderPL" partnerLinkType="tns:OrderPLT"
			partnerRole="OrderRole"></bpel:partnerLink>
	</bpel:partnerLinks>

	<!-- ================================================================= -->
	<!-- VARIABLES -->
	<!-- List of messages and XML documents used within this BPEL process -->
	<!-- ================================================================= -->
	<bpel:variables>
		<!-- Reference to the message passed as input during initiation -->
		<bpel:variable name="input" messageType="tns:ConductOrder2RequestMessage" />

		<!-- Reference to the message that will be returned to the requester -->
		<bpel:variable name="output" messageType="tns:ConductOrder2ResponseMessage" />






		<bpel:variable name="checkAvailabilityResponse"
			messageType="ns:checkAvailabilityOutput"></bpel:variable>
		<bpel:variable name="checkAvailabilityRequest"
			messageType="ns:checkAvailabilityInput"></bpel:variable>
		<bpel:variable name="storeOrderDetailsRequest"
			messageType="ns:storeOrderDetailsInput"></bpel:variable>
		<bpel:variable name="storeOrderDetailsResponse"
			messageType="ns:storeOrderDetailsOutput"></bpel:variable>
	</bpel:variables>

	<!-- ================================================================= -->
	<!-- ORCHESTRATION LOGIC -->
	<!-- Set of activities coordinating the flow of messages across the -->
	<!-- services integrated within this business process -->
	<!-- ================================================================= -->
	<bpel:sequence name="main">

		<!-- Receive input from requester. Note: This maps to operation defined 
			in ConductOrder2.wsdl -->
		<bpel:receive name="receiveInput" partnerLink="client"
			portType="tns:ConductOrder2" operation="process" variable="input"
			createInstance="yes" />

		<!-- Generate reply to synchronous request -->



		<bpel:forEach parallel="no" counterName="Counter" name="ForEachProduct">
			<bpel:startCounterValue><![CDATA[1]]></bpel:startCounterValue>
			<bpel:finalCounterValue><![CDATA[count($input.payload/tns:input/tns:products/tns:product)]]></bpel:finalCounterValue>
			<bpel:scope>
				<bpel:variables>
					<bpel:variable name="InventoryPLRequest1" element="ns:checkAvailability"></bpel:variable>
					<bpel:variable name="checkAvailabiltyRequest"
						element="ns:checkAvailability"></bpel:variable>
				</bpel:variables>
				<bpel:sequence>
					<bpel:assign validate="no" name="AssignProductId">
						<bpel:copy>
							<bpel:from>
								<bpel:literal>
									<tns:checkAvailability
										xmlns:tns="http://iaas.uni-stuttgart.de/labs/FlowSOG"
										xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
										<tns:productId>tns:productId</tns:productId>
									</tns:checkAvailability>
								</bpel:literal>
							</bpel:from>
							<bpel:to variable="checkAvailabilityRequest" part="checkAvailabilityInput"></bpel:to>
						</bpel:copy>
						<bpel:copy>
							<bpel:from>
                                
                                <![CDATA[$input.payload/tns:input/tns:products/tns:product[round($Counter)]/tns:productId]]>
							</bpel:from>
							<bpel:to part="checkAvailabilityInput" variable="checkAvailabilityRequest">
								<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:productId]]></bpel:query>
							</bpel:to>
						</bpel:copy>
					</bpel:assign>
					<bpel:invoke name="InvokeCheckAvailability"
						partnerLink="InventoryPL" operation="checkAvailability" portType="ns:InventoryPortType"
						inputVariable="checkAvailabilityRequest" outputVariable="checkAvailabilityResponse"></bpel:invoke>
					<bpel:if name="IfNotAvailable">
						<bpel:condition><![CDATA[$checkAvailabilityResponse.checkAvailabilityOutput/ns:product[round($Counter)]/ns:status/ns:currentAvailability = "not available"]]></bpel:condition>
						<bpel:exit name="Exit"></bpel:exit>
					</bpel:if>


				</bpel:sequence>
			</bpel:scope>
		</bpel:forEach>
		<bpel:assign validate="no" name="AssignOrderDetails">
			<bpel:copy>
				<bpel:from>
					<bpel:literal>
						<tns:storeOrderDetails xmlns:tns="http://iaas.uni-stuttgart.de/labs/FlowSOG"
							xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
							<tns:orderId>tns:orderId</tns:orderId>
							<tns:customerId>tns:customerId</tns:customerId>
							<tns:products>
								<tns:product>
									<tns:productId>tns:productId</tns:productId>
									<tns:numberOfItems>0</tns:numberOfItems>
								</tns:product>
							</tns:products>
							<tns:shippingAddress>tns:shippingAddress</tns:shippingAddress>
							<tns:paymentDetails>
								<tns:bankName>tns:bankName</tns:bankName>
								<tns:bankAddress>tns:bankAddress</tns:bankAddress>
								<tns:accountNumber>tns:accountNumber</tns:accountNumber>
								<tns:accountHolderName>tns:accountHolderName
								</tns:accountHolderName>
							</tns:paymentDetails>
							<tns:status>ordered</tns:status>
						</tns:storeOrderDetails>
					</bpel:literal>
				</bpel:from>
				<bpel:to variable="storeOrderDetailsRequest" part="storeOrderDetailsInput"></bpel:to>
			</bpel:copy>
			<bpel:copy>
				<bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[tns:input/tns:products]]>
                    </bpel:query>
                </bpel:from>
                <bpel:to part="storeOrderDetailsInput" variable="storeOrderDetailsRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[ns:products]]>
                    </bpel:query>
                </bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[tns:input/tns:shippingAddress]]>
                    </bpel:query>
                </bpel:from>
                <bpel:to part="storeOrderDetailsInput" variable="storeOrderDetailsRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:shippingAddress]]></bpel:query>
                </bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:input/tns:paymentDetails]]></bpel:query>
                </bpel:from>
                <bpel:to part="storeOrderDetailsInput" variable="storeOrderDetailsRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:paymentDetails]]></bpel:query>
                </bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:invoke name="InvokeStoreOrderDetails" partnerLink="OrderPL" operation="storeOrderDetails" portType="ns:OrderPortType" inputVariable="storeOrderDetailsRequest" outputVariable="storeOrderDetailsResponse"></bpel:invoke>
        <bpel:reply name="replyOutput" 
               partnerLink="client"
               portType="tns:ConductOrder2"
               operation="process" 
               variable="output"
               />
    </bpel:sequence>
</bpel:process>

